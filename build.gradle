buildscript {
	ext {
		springBootVersion = '2.2.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE')
	}	
}

subprojects {
	group = 'com.boot.guides'
	version = '0.0.1-SNAPSHOT'
	
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java'
	apply plugin: 'eclipse'
	
	sourceCompatibility = '1.8'
	
	configurations {
		developmentOnly
		runtimeClasspath {
			extendsFrom developmentOnly
		}
		compileOnly {
			extendsFrom annotationProcessor
		}
	}
	
	repositories {
		mavenCentral()
	}
	
	task initSourceFolders {
		sourceSets*.java.srcDirs*.each {
			if(!it.exists()) it.mkdirs()
		}
		sourceSets*.resources.srcDirs*.each {
			if(!it.exists()) it.mkdirs()
		}
	}
	
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		runtimeOnly 'com.h2database:h2'
		compileOnly 'org.projectlombok:lombok'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
	}
	
	test {
		useJUnitPlatform()
	}
}
